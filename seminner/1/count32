:vpi_time_precision + 0;
:vpi_module "system";
S_013D4828 .scope module, "count32_test" "count32_test";
 .timescale 0;
V_$013D4B28 .var "I", 31, 0;
V_$013D4BE8 .net "O", 5, 0, V_$013D3C58[0], V_$013D3C58[1], V_$013D3C58[2], V_$013D3C58[3], V_$013D3C58[4], V_$013D3C58[5];
S_013D37D8 .scope module, "count32" "count32", S_013D4828;
 .timescale 0;
V_$013D4048 .net "I", 31, 0, V_$013D4B28[0], V_$013D4B28[1], V_$013D4B28[2], V_$013D4B28[3], V_$013D4B28[4], V_$013D4B28[5], V_$013D4B28[6], V_$013D4B28[7], V_$013D4B28[8], V_$013D4B28[9], V_$013D4B28[10], V_$013D4B28[11], V_$013D4B28[12], V_$013D4B28[13], V_$013D4B28[14], V_$013D4B28[15], V_$013D4B28[16], V_$013D4B28[17], V_$013D4B28[18], V_$013D4B28[19], V_$013D4B28[20], V_$013D4B28[21], V_$013D4B28[22], V_$013D4B28[23], V_$013D4B28[24], V_$013D4B28[25], V_$013D4B28[26], V_$013D4B28[27], V_$013D4B28[28], V_$013D4B28[29], V_$013D4B28[30], V_$013D4B28[31];
V_$00C7EDD0 .net "O", 5, 0, V_$013D3C58[0], V_$013D3C58[1], V_$013D3C58[2], V_$013D3C58[3], V_$013D3C58[4], V_$013D3C58[5];
V_$013D3C58 .var "cnt", 5, 0;
V_$013D3C90 .var "i", 5, 0;
E_013D50D8/0 .event edge, V_$013D4B28[0], V_$013D4B28[1], V_$013D4B28[2], V_$013D4B28[3];
E_013D50D8/1 .event edge, V_$013D4B28[4], V_$013D4B28[5], V_$013D4B28[6], V_$013D4B28[7];
E_013D50D8/2 .event edge, V_$013D4B28[8], V_$013D4B28[9], V_$013D4B28[10], V_$013D4B28[11];
E_013D50D8/3 .event edge, V_$013D4B28[12], V_$013D4B28[13], V_$013D4B28[14], V_$013D4B28[15];
E_013D50D8/4 .event edge, V_$013D4B28[16], V_$013D4B28[17], V_$013D4B28[18], V_$013D4B28[19];
E_013D50D8/5 .event edge, V_$013D4B28[20], V_$013D4B28[21], V_$013D4B28[22], V_$013D4B28[23];
E_013D50D8/6 .event edge, V_$013D4B28[24], V_$013D4B28[25], V_$013D4B28[26], V_$013D4B28[27];
E_013D50D8/7 .event edge, V_$013D4B28[28], V_$013D4B28[29], V_$013D4B28[30], V_$013D4B28[31];
E_013D50D8 .event/or E_013D50D8/0, E_013D50D8/1, E_013D50D8/2, E_013D50D8/3, E_013D50D8/4, E_013D50D8/5, E_013D50D8/6, E_013D50D8/7;
    .scope S_013D37D8;
T_0 ;
    %wait E_013D50D8;
    %set/v V_$013D3C90[0], 0, 6;
    %set/v V_$013D3C58[0], 0, 6;
    %mov 8, 0, 5;
    %mov 13, 1, 1;
    %mov 14, 0, 1;
T_0.0 %cmp/u 0, 8, 7;
    %jmp/0xz T_0.1, 5;
    %add 8, 1, 7;
    %load/v 15, V_$013D3C90[0], 6;
    %ix/get 0, 15,6;
    %load/nx 15, V_$013D4048, 0;
    %jmp/0  T_0.2, 15;
    %load/v 16, V_$013D3C58[0], 6;
    %addi 16, 1, 6;
    %jmp/1  T_0.4, 15;
T_0.2 ; End of true expr.
    %load/v 22, V_$013D3C58[0], 6;
    %jmp/0  T_0.3, 15;
 ; End of false expr.
    %blend  16, 22, 6; Condition unknown.
    %jmp  T_0.4;
T_0.3 ;
    %mov 16, 22, 6; Return false value
T_0.4 ;
    %set/v V_$013D3C58[0], 16, 6;
    %load/v 15, V_$013D3C90[0], 6;
    %addi 15, 1, 6;
    %set/v V_$013D3C90[0], 15, 6;
    %jmp T_0.0;
T_0.1 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_013D4828;
T_1 ;
    %vpi_call "$dumpfile", "count32_test.vcd";
    %vpi_call "$dumpvars", 1'sb0, S_013D4828;
    %vpi_call "$monitor", "%t: I = %b, out = %b", $time, V_$013D4B28, V_$013D4BE8;
    %set/v V_$013D4B28[0], 0, 32;
    %delay 10;
    %set V_$013D4B28[0], 1;
    %set/v V_$013D4B28[1], 0, 31;
    %delay 10;
    %set/v V_$013D4B28[0], 1, 32;
    %delay 10;
    %set/v V_$013D4B28[0], 0, 16;
    %set/v V_$013D4B28[16], 1, 16;
    %delay 10;
    %set/v V_$013D4B28[0], 0, 32;
    %delay 10;
    %vpi_call "$dumpflush";
    %delay 10;
    %vpi_call "$finish";
    %end;
    .thread T_1;
